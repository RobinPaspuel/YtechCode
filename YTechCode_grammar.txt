expr        : (KEYWORD:LET|KEYWORD:let) IDENTIFIER EQUALS expr
            : comp_expr ((KEYWORD:AND|KEYWORD:and|KEYWORD:OR|KEYWORD:or) comp_expr)*

comp_expr   :NOT comp_expr
            :arith_expr ((DEQ|NDEQ|LL|GG|LEQ|GEQ) arith_expr)*

arith_expr  : term ((PLUS|MINUS) term)*

term        : factor ((MUL|DIV) factor)*

factor      : (PLUS|MINUS) factor
            : power

power       : func_call (POW factor)*    

func_call   : atom (LPAREN (expr (COMMA expr)*)(opt) RPAREN)(opt)

atom        : INT|FLOAT|IDENTIFIER
            : LPAREN expr RPAREN
            : if-stmt
            : for-stmt
            : while-stmt
            : def_func

if-stmt     : (KEYWORD: IF|KEYWORD: if) expr CBL expr CBR
            : ((KEYWORD: ELIF|KEYWORD: elif) expr CBL expr CBR)*
            : ((KEYWORD: ELSE|KEYWORD: else) CBL expr CBR) opt

for-stmt    : (KEYWORD: FOR|KEYWORD: for) IDENTIFIER EQUALS expr COLON expr 
              COLON expr (opt) CBL expr CBR

while-stmt  : (KEYWORD: WHILE|KEYWORD: while) expr CBL expr CBR

def_func    : (KEYWORD: DEF|KEYWORD: def) IDENTIFIER(opt) LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)(opt) RPAREN CBL expr CBR